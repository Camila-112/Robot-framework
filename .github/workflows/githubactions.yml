name: Run Robot Framework Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Python
      - name: Set up Python $(matrix.python-version)
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Instalar dependências do Chrome
      - name: Install Chrome dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget curl gnupg2
          sudo apt-get install -y libx11-dev libxkbfile1 libsecret-1-0 libnss3 libgdk-pixbuf2.0-0 libgtk-3-0
          sudo apt-get install -y libasound2 libxcomposite1 libxrandr2 libatk-bridge2.0-0 libatk1.0-0 libcups2
          sudo apt-get install -y libdbus-1-3 libgdk-pixbuf2.0-0 libnspr4 libnss3 libxss1
          sudo apt-get install -y libgbm1
          
          # Instalar o Google Chrome
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb
          sudo apt-get install -f

      # Instalar o ChromeDriver correto
      - name: Install correct ChromeDriver version
        run: |
          # Obtendo a versão do Chrome
          CHROME_VERSION=$(google-chrome --version | sed 's/[^0-9]*\([0-9]*\.[0-9]*\.[0-9]*\)/\1/')
          
          # Baixando a versão do ChromeDriver correspondente
          DRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION)
          wget https://chromedriver.storage.googleapis.com/$DRIVER_VERSION/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/chromedriver
          sudo chmod +x /usr/local/bin/chromedriver

      # Instalar dependências do Python
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install robotframework selenium robotframework-seleniumlibrary

      # Executar os testes do Robot Framework
      - name: Run Robot Framework Tests
        run: |
          robot --output output.xml --report report.html --log log.html test.robot

      # Fazer upload dos relatórios como artefatos
      - name: Upload Robot Framework Reports
        uses: actions/upload-artifact@v3
        with:
          name: robot-reports
          path: |
            output.xml
            report.html
            log.html